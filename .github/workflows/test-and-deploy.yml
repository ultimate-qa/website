name: Test and Build UltimateQA Landing Page

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  NEXT_PUBLIC_HUBSPOT_PORTAL_ID: ${{ secrets.HUBSPOT_PORTAL_ID }}
  NEXT_PUBLIC_HUBSPOT_FORM_ID: ${{ secrets.HUBSPOT_FORM_ID }}
  NEXT_PUBLIC_HUBSPOT_TRACKING_CODE: ${{ secrets.HUBSPOT_TRACKING_CODE }}
  NEXT_PUBLIC_GOOGLE_VERIFICATION: ${{ secrets.GOOGLE_VERIFICATION }}

jobs:
  # Build Stage
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: TypeScript compilation check
        run: npm run type-check
        
      - name: Build Next.js application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next
            out
          retention-days: 1

  # Linting and Code Quality
  lint:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Check TypeScript
        run: npm run type-check

  # Performance Tests
  test-performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          
      - name: Install Playwright
        run: npx playwright install --with-deps
        
      - name: Start development server
        run: npm run dev &
        env:
          CI: true
          
      - name: Wait for server to be ready
        run: npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run performance tests
        run: npm run test tests/performance.spec.ts
        
      - name: Upload performance test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-test-results
          path: test-results/
          retention-days: 7

  # Chrome Tests
  test-chrome:
    name: Chrome Tests
    runs-on: ubuntu-latest
    needs: build
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          
      - name: Install Playwright Chromium
        run: npx playwright install --with-deps chromium
        
      - name: Start development server
        run: npm run dev &
        env:
          CI: true
          
      - name: Wait for server to be ready
        run: npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run Chrome tests
        run: npx playwright test tests/links.spec.ts tests/mobile.spec.ts tests/api.spec.ts --project=chromium
        
      - name: Upload Chrome test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-chrome
          path: test-results/
          retention-days: 7

  # Safari Tests
  test-safari:
    name: Safari Tests
    runs-on: ubuntu-latest
    needs: build
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          
      - name: Install Playwright WebKit
        run: npx playwright install --with-deps webkit
        
      - name: Start development server
        run: npm run dev &
        env:
          CI: true
          
      - name: Wait for server to be ready
        run: npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run Safari tests
        run: npx playwright test tests/links.spec.ts tests/mobile.spec.ts tests/api.spec.ts --project=webkit
        
      - name: Upload Safari test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-safari
          path: test-results/
          retention-days: 7

  # Security Audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=high
        
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Cleanup
  cleanup:
    name: Cleanup Artifacts
    runs-on: ubuntu-latest
    needs: [test-performance, test-chrome, test-safari]
    if: always()
    
    steps:
      - name: Delete build artifacts
        uses: geekyeggo/delete-artifact@v4
        with:
          name: build-files
          failOnError: false 